{
    "cvEvaluation": [
        {
            "parameter": "Technical Skills Match",
            "metadata": { "type": "cv_match_evaluation" },
            "content": "Description: Alignment with job requirements (backend, databases, APIs, cloud, AI/LLM). Weight: 40%. Scoring Guide: 1=Irrelevant skills, 2=Few overlaps, 3=Partial match, 4=Strong match, 5=Excellent match + AI/LLM exposure."
        },
        {
            "parameter": "Experience Level",
            "metadata": { "type": "cv_match_evaluation" },
            "content": "Description: Years of experience and project complexity. Weight: 25%. Scoring Guide: 1=<1 yr/trivial projects, 2=1-2 yrs, 3=2-3 yrs with mid-scale projects, 4=3-4 yrs solid track record, 5=5+ yrs / high-impact projects."
        },
        {
            "parameter": "Relevant Achievements",
            "metadata": { "type": "cv_match_evaluation" },
            "content": "Description: Impact of past work (scaling, performance, adoption). Weight: 20%. Scoring Guide: 1=No clear achievements, 2=Minimal improvements, 3=Some measurable outcomes, 4=Significant contributions, 5=Major measurable impact."
        },
        {
            "parameter": "Cultural/Collaboration Fit",
            "metadata": { "type": "cv_match_evaluation" },
            "content": "Description: Communication, learning mindset, teamwork/leadership. Weight: 15%. Scoring Guide: 1=Not demonstrated, 2=Minimal, 3=Average, 4=Good, 5=Excellent and well-demonstrated."
        }
    ],
    "projectEvaluation": [
        {
            "parameter": "Correctness (Prompt & Chaining)",
            "metadata": { "type": "project_deliverable_evaluation" },
            "content": "Description: Implements prompt design, LLM chaining, RAG context injection. Weight: 30%. Scoring Guide: 1=Not implemented, 2=Minimal attempt, 3=Works partially, 4=Works correctly, 5=Fully correct + thoughtful."
        },
        {
            "parameter": "Code Quality & Structure",
            "metadata": { "type": "project_deliverable_evaluation" },
            "content": "Description: Clean, modular, reusable, tested. Weight: 25%. Scoring Guide: 1=Poor, 2=Some structure, 3=Decent modularity, 4=Good structure + some tests, 5=Excellent quality + strong tests."
        },
        {
            "parameter": "Resilience & Error Handling",
            "metadata": { "type": "project_deliverable_evaluation" },
            "content": "Description: Handles long jobs, retries, randomness, API failures. Weight: 20%. Scoring Guide: 1=Missing, 2=Minimal, 3=Partial handling, 4=Solid handling, 5=Robust, production-ready."
        },
        {
            "parameter": "Documentation & Explanation",
            "metadata": { "type": "project_deliverable_evaluation" },
            "content": "Description: README clarity, setup instructions, trade-off explanations. Weight: 15%. Scoring Guide: 1=Missing, 2=Minimal, 3=Adequate, 4=Clear, 5=Excellent + insightful."
        },
        {
            "parameter": "Creativity / Bonus",
            "metadata": { "type": "project_deliverable_evaluation" },
            "content": "Description: Extra features beyond requirements. Weight: 10%. Scoring Guide: 1=None, 2=Very basic, 3=Useful extras, 4=Strong enhancements, 5=Outstanding creativity."
        }
    ]
}
